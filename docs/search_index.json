[["index.html", "portfolio_assignment_2 Curriculum Vitae Contact Profile Education Experience Skills Languages", " portfolio_assignment_2 Youri Lam 2023-01-07 ## Skipping install of &#39;toolboxr&#39; from a github remote, the SHA1 (e43ee4ec) has not changed since last install. ## Use `force = TRUE` to force installation Curriculum Vitae Contact Barneveld, The Netherlands yourilam2001@gmail.com +31 6 21203760 github.com/YouriLam Profile I am a young, studious, determined, curious student with a passion for biomedical research. Although my interests mainly lie in lab work, I am also very much at home in bioinformatics. By combining both interests I see myself as an asset in the development of data analysis and biomedical research. Education Hogeschool Utrecht Bachelor of Science - BS, Life Sciences, Sep. 2019 - Aug. 2024 Specialized in Data Sciences for Biology Experience Eurofins Analytico B.V. - Barneveld Pre-treatment Organic Substances Nov. 2021 - Present Coop BV - Barneveld Sales Associate, Nov. 2016 - Nov. 2021 Skills R programming language Bash command language SQL Excel CSS stylesheet language (Cell) culture Languages Dutch - native speaker English - C1 "],["Workflows_Portfolio_1.1.html", "", "dataset_elegans &lt;- read_excel(here(&quot;raw_data/CE.LIQ.FLOW.062_Tidydata.xlsx&quot;)) typeof(dataset_elegans$RawData) ## [1] &quot;double&quot; typeof(dataset_elegans$compName) ## [1] &quot;character&quot; typeof(dataset_elegans$compConcentration) ## [1] &quot;character&quot; Before the data can be visualized, it has to be cleaned up. The dataframe is already in tidy format, but the data types of the columns need to be changed. The variables RawData (the outcome - number of offspring counted as an integer value, after incubation time), compName (the generic name of the compound/chemical) and the compConcentration (the concentration of the compound) are all very important in this research. Expected data types would be double/integer for RawData, character for compName and double for compConcentration. The actual data types of the columns are double for RawData, character for compName and character for compConcentration, as seen above. When plotted, this will result in the following issue: plot_wrong &lt;- ggplot(data = dataset_elegans, aes(x = compConcentration, y = RawData))+ geom_point(aes(color = compName, shape = expType), size = 1)+ rotate_axis_labels(&quot;x&quot;, 90)+ labs(x = &quot;Concentration&quot;, y = &quot;Number of offspring&quot;, title = &quot;Number of offspring of adult Elegans were exposed to varying concentrations of different compounds, alphabetical&quot;, shape = &quot;Type&quot;, color = &quot;Compound&quot;)+ theme(legend.key.size = unit(0.75,&quot;line&quot;), legend.text = element_text(size = 8)) plot_wrong Figure 1: Number of C. elegans offspring under a number of circumstances where the x-axis is ordered alphabetically As seen in the figure above, the x-axis labels are ordered alphabetically. This is because the data type of the compConcentration is character instead of double. Looking at the compUnit part of the data, I noticed that not all of the data shares the same compUnit. Some of them are compounds measured in nM and some compounds are measured in percentage. To show this, I made sure to divide the data into two graphs, one for each unit. By changing the date types to the correct ones (including the types talked about previously) and adding jitter, we can make the graph look like this: dataset_elegans$RawData &lt;- as.integer(dataset_elegans$RawData) dataset_elegans$compName &lt;- as.factor(dataset_elegans$compName) dataset_elegans$compConcentration &lt;- as.double(dataset_elegans$compConcentration) class(dataset_elegans$RawData) ## [1] &quot;integer&quot; class(dataset_elegans$compName) ## [1] &quot;factor&quot; class(dataset_elegans$compConcentration) ## [1] &quot;numeric&quot; #Scatter plot filtered on nM as unit elegans_nM &lt;- dataset_elegans %&gt;% filter(compUnit == &quot;nM&quot;) scatter_nM &lt;- ggplot(data = elegans_nM, aes(x = log10(compConcentration), y = RawData))+ geom_jitter(aes(color = compName, shape = expType), width = 0.5, height = 0.2)+ labs(x = &quot;log10 concentration of compounds (nM)&quot;, y = &quot;Number of offspring&quot;)+ theme(legend.position = &quot;none&quot;) #Scatter plot filtered on pct as unit elegans_pct &lt;- dataset_elegans %&gt;% filter(compUnit == &quot;pct&quot;) scatter_pct &lt;- ggplot(data = elegans_pct, aes(x = expType, y = RawData))+ geom_jitter(aes(color = compName, shape = expType), width = 0.1, height = 0.2)+ labs(x = &quot;log10 concentration of compounds (nM)&quot;, y = &quot;Number of offspring&quot;)+ theme(legend.position = &quot;none&quot;, axis.text.x=element_text(vjust=0.5, hjust=0.5, size = 8.75), axis.text.y = element_blank(), axis.ticks.y = element_blank(), axis.title.y = element_blank())+ rotate_axis_labels(&quot;x&quot;, 90) legend &lt;- get_legend(plot_wrong) plot_grid(plot_grid(scatter_nM, scatter_pct), plot_grid(NULL, legend, ncol = 3), rel_widths = c(1, 0.35))+ plot_annotation(&quot;Number of C. elegans offspring under\\na number of circumstances&quot;) Figure 2: Number of C. elegans offspring under a number of circumstances The positive control for this experiment is ethanol. The negative control for this experiment is S-medium. To make it easier to read the grap, the data needs to be normalized. To do this we adjust the negative control to a value of 1 and adjust the other values in the same way: #Obtain the mean of the RawData (negativeControl) neg_control &lt;- dataset_elegans %&gt;% filter(compName == &quot;S-medium&quot;) %&gt;% summarize(mean = mean(RawData, na.rm = TRUE)) #Use the mean to calculate fractions mutated &lt;- dataset_elegans %&gt;% filter(RawData &gt; 0) %&gt;% select(RawData, compName, compConcentration, expType) %&gt;% na.omit() %&gt;% mutate(normalized = RawData/neg_control$mean) #create normalized plot normalized_plot &lt;- mutated %&gt;% filter(compName == &quot;2,6-diisopropylnaphthalene&quot; | compName == &quot;decane&quot; | compName == &quot;naphthalene&quot;) %&gt;% ggplot(aes(x = log10(compConcentration), y = normalized))+ geom_jitter(aes(color = compName), width = 0.5, height = 0.1)+ labs(x = &quot;log10 concentration (nM)&quot;, y = &quot;Normalized number of offspring&quot;, title = &quot;Number of C. elegans offspring as a fraction\\nof the negative control group&quot;, color = &quot;Compound&quot;)+ geom_hline(yintercept = 1, color = &quot;red&quot;) normalized_plot Figure 3: Number of C. elegans offspring as a fraction of the negative control group. Everything below the red line means less offspring than control C. elegans and everything above it has more offspring. For further analysation of the effect i would start by testing normality by performing a Shapiro-Wilk test. If unusual, i would normalize the data like done above. If normal, i would start an ANOVA between de different conditions. I would end with the post-hoc tests, to check in what combination of groups the difference is. For the first part of the assignment I will have ato check the reproduction of an article, based on the ‘Repita’ criteria (Sumner et al. 2020). These criteria are used to check for the reproducibility of scientific research articles. In the table below the different criteria are shown with a definition and the type of response it calls for. References "],["Workflows_Portfolio_1.2.html", "", "criteria_table &lt;- data.frame(TransparencyCriteria = c(&quot;Study Purpose&quot;, &quot;Data Availability Statement&quot;, &quot;Data Location&quot;, &quot;Study Location&quot;, &quot;Author Review&quot;, &quot;Ethics Statement&quot;, &quot;Funding Statement&quot;, &quot;Code Availability&quot;), Definition = c(&quot;A concise statement in the introduction of the article, often in the last paragraph, that establishes the reason the research was conducted. Also called the studyobjective.&quot;, &quot;A statement, in an individual section offset from the main body of text, that explains how or if one can access a study’s data. The title of the section may vary, but it must explicitly mention data; it is therefore distinct from a supplementary materials section.&quot;, &quot;Where the article’s data can be accessed, either raw or processed.&quot;, &quot;Author has stated in the methods section where the study took place or the data’s country/region of origin.&quot;, &quot;The professionalism of the contact information that the author has provided in the manuscript.&quot;, &quot;A statement within the manuscript indicating any ethical concerns, including the presence of sensitive data.&quot;, &quot;A statement within the manuscript indicating whether or not the authors received funding for their research.&quot;, &quot;Authors have shared access to the most updated code that they used in their study, including code used for analysis.&quot;), ResponseType = c(&quot;Binary&quot;, &quot;Binary&quot;, &quot;Found Value&quot;, &quot;Binary; Found Value&quot;, &quot;Found Value&quot;, &quot;Binary&quot;, &quot;Binary&quot;, &quot;Binary&quot;)) knitr::kable(criteria_table, caption = &quot;Table with the criteria for reproducibility.&quot;) (#tab:criteria table)Table with the criteria for reproducibility. TransparencyCriteria Definition ResponseType Study Purpose A concise statement in the introduction of the article, often in the last paragraph, that establishes the reason the research was conducted. Also called the studyobjective. Binary Data Availability Statement A statement, in an individual section offset from the main body of text, that explains how or if one can access a study’s data. The title of the section may vary, but it must explicitly mention data; it is therefore distinct from a supplementary materials section. Binary Data Location Where the article’s data can be accessed, either raw or processed. Found Value Study Location Author has stated in the methods section where the study took place or the data’s country/region of origin. Binary; Found Value Author Review The professionalism of the contact information that the author has provided in the manuscript. Found Value Ethics Statement A statement within the manuscript indicating any ethical concerns, including the presence of sensitive data. Binary Funding Statement A statement within the manuscript indicating whether or not the authors received funding for their research. Binary Code Availability Authors have shared access to the most updated code that they used in their study, including code used for analysis. Binary The research article I will be scoring for reproducibility is “Effects of taurine on resting-state fMRI activity in spontaneously hypertensive rats” (Chen et al. 2017). The study objective is, if it wasn’t obvious from the title, to investigate the effects of taurine on resting-state fMRI activity in ADHD. fMRI measurement is a big factor in the pathogenesis of ADHD. The more fMRI, the more likely reduction in volume or function in specific brain areas will occur, resulting in various behavioral problems.Taurine, which is known to be the richest amino acid in the central nervous system, performs various functions in the body. One of these functions as being a neurotransmitter. Multiple findings (linked in the article itself) strongly associate taurine with various ADHD-related neurotransmitters.The goal of this article is to find out if there’s a connection between the two. Using the table previously mentioned, we can go ahead and rank our own article’s reproducibility: criteria_adhd &lt;- criteria_table %&gt;% mutate(Rating = c(&quot;Present&quot;, &quot;Present&quot;, &quot;Present, the data can be found [here](https://figshare.com/articles/dataset/SHR/5091727)&quot;, &quot;The workplace of the authors has been given (Taiwan), but the location where the research has been performed remains unnamed.&quot;, &quot;Only 2 of the authors&#39; email adresses have been given, the others are not able to be contacted&quot;, &quot;Not present&quot;, &quot;Present&quot;, &quot;Not present&quot;)) knitr::kable(criteria_adhd, caption = &quot;Table showing how the article scored on reproducibility.&quot;) (#tab:ranking article 1)Table showing how the article scored on reproducibility. TransparencyCriteria Definition ResponseType Rating Study Purpose A concise statement in the introduction of the article, often in the last paragraph, that establishes the reason the research was conducted. Also called the studyobjective. Binary Present Data Availability Statement A statement, in an individual section offset from the main body of text, that explains how or if one can access a study’s data. The title of the section may vary, but it must explicitly mention data; it is therefore distinct from a supplementary materials section. Binary Present Data Location Where the article’s data can be accessed, either raw or processed. Found Value Present, the data can be found here Study Location Author has stated in the methods section where the study took place or the data’s country/region of origin. Binary; Found Value The workplace of the authors has been given (Taiwan), but the location where the research has been performed remains unnamed. Author Review The professionalism of the contact information that the author has provided in the manuscript. Found Value Only 2 of the authors’ email adresses have been given, the others are not able to be contacted Ethics Statement A statement within the manuscript indicating any ethical concerns, including the presence of sensitive data. Binary Not present Funding Statement A statement within the manuscript indicating whether or not the authors received funding for their research. Binary Present Code Availability Authors have shared access to the most updated code that they used in their study, including code used for analysis. Binary Not present Overall, I give this article a 8.5/10 on reproducibility. It’s clear what the writers of this article want to put forward, even if no code is provided. 0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.1 For the second part of the assignment I will have to use the code provided with an article. I will have to try and understand the code, explain what it does and even try to make at least one figure. This article (Buecker et al. 2020) describes changes in daily loneliness for German residents during the first four weeks of the COVID-19 pandemic. The code is easily available and very easily readable. There are a lot of codes included. Using the processed data, it is very easy to recreate on of the figures from this study. I would rate the readabilty of this code a 5/5. # gg_color_hue ------------------------------------------------------------ ## function for colors gg_color_hue &lt;- function(n) { hues = seq(15, 375, length = n + 1) hcl(h = hues, l = 65, c = 100)[1:n] } # get_max_daily ----------------------------------------------------------- # x &lt;- ymd(&quot;2020-03-23 UTC&quot;) get_max_daily &lt;- function(x){ x &lt;- x + c(1:4, 9:12, 17:20, 25:27) x &lt;- x[x &lt; ymd(&quot;2020-04-13 UTC&quot;)] return(x) } # read data --------------------------------------------------------------- # sample 1 sample1 &lt;- read.csv(here(&quot;raw_data/sample1_use for revision 1.csv&quot;)) sample1 &lt;- sample1[sample1$include_1,] # sample 2 sample2 &lt;- read.csv(here(&quot;raw_data/sample2_use for revision 1.csv&quot;)) sample2 &lt;- sample2[sample2$include_1,] # combine samples for the additional analyses data &lt;- rbind(sample1, sample2) # packages ---------------------------------------------------------------- # install.packages(&quot;lubridate&quot;) library(lubridate) # ------------------------------------------------------------------------- ## define colors c &lt;- gg_color_hue(2) col.s1 &lt;- c[1] col.s2 &lt;- c[2] # completed baseline surveys per day that are included in the study data_l2_s1 &lt;- unique(sample1[c(&quot;ID&quot;, &quot;b_baseline_ended&quot;)]) data_l2_s2 &lt;- unique(sample2[c(&quot;ID&quot;, &quot;b_baseline_ended&quot;)]) # no missings on this variable any(is.na(data_l2_s1[2])) ## [1] FALSE any(is.na(data_l2_s2[2])) ## [1] FALSE date_s1 &lt;- ymd_hms(data_l2_s1$b_baseline_ended) hour(date_s1) &lt;- 0 minute(date_s1) &lt;- 0 second(date_s1) &lt;- 0 date_s2 &lt;- ymd_hms(data_l2_s2$b_baseline_ended) hour(date_s2) &lt;- 0 minute(date_s2) &lt;- 0 second(date_s2) &lt;- 0 # number of baseline surveys completed t_date_baseline_1 &lt;- table(ymd(date_s1)) t_date_baseline_2 &lt;- table(ymd(date_s2)) t_date_baseline_1 &lt;- c(t_date_baseline_1, &quot;2020-04-12&quot; = 0) t_date_baseline_12 &lt;- rbind(t_date_baseline_1, t_date_baseline_2) # barplot sample 1 and 2 baseline participation --------------------------- layout(matrix(1:2, 1, 2, byrow = TRUE)) b &lt;- barplot(t_date_baseline_12, beside = TRUE, ylim = c(0, 800), names.arg = rep(&quot;&quot;, length(t_date_baseline_12)), col = c(col.s1, col.s2), axes = FALSE) box() axis(2, las = 2, cex.axis = 0.8) s &lt;- seq(1, 28, 7) labels &lt;- colnames(t_date_baseline_12)[s] axis(1, at = ((b[1,] + b[2,])/2)[s], labels = labels, cex.axis = 0.8) text(&quot;A&quot;, x = ((b[1,] + b[2,])/2)[2], y = 800*.9, cex = 4, col = &quot;grey&quot;) legend(x = ((b[1,] + b[2,])/2)[15], y = 800, legend = c(&quot;Sample 1&quot;, &quot;Sample 2&quot;), fill = c(col.s1, col.s2), bty = &quot;n&quot;) # dates at which a daily survey could have been completed: max_daily_dates_s1 &lt;- lapply(ymd(date_s1), get_max_daily) max_daily_dates_s2 &lt;- lapply(ymd(date_s2), get_max_daily) max_dates_s1 &lt;- do.call(&quot;c&quot;, max_daily_dates_s1) max_dates_s2 &lt;- do.call(&quot;c&quot;, max_daily_dates_s2) obtained_dates_s1 &lt;- sample1$daily_date obtained_dates_s2 &lt;- sample2$daily_date t_max_dates_s1 &lt;- table(max_dates_s1) t_max_dates_s2 &lt;- table(max_dates_s2) t_obtained_dates_s1 &lt;- table(obtained_dates_s1) t_obtained_dates_s2 &lt;- table(obtained_dates_s2) t_obtained_dates_s12 &lt;- rbind(t_obtained_dates_s1, t_obtained_dates_s2) b &lt;- barplot(t_obtained_dates_s12, beside = TRUE, ylim = c(0, 2000), names.arg = rep(&quot;&quot;, length(t_obtained_dates_s12)), col = c(col.s1, col.s2), axes = FALSE) box() axis(2, las = 2, cex.axis = 0.8) labels &lt;- colnames(t_obtained_dates_s12)[s] axis(1, at = ((b[1,] + b[2,])/2)[s], labels = labels, cex.axis = 0.8) lines(y = t_max_dates_s1, x = b[1,], type = &quot;p&quot;, pch = &quot;-&quot;, col = col.s1, cex = 1.5) lines(y = t_max_dates_s2, x = b[2,], type = &quot;p&quot;, pch = &quot;-&quot;, col = col.s2, cex = 1.5) text(&quot;B&quot;, x = ((b[1,] + b[2,])/2)[2], y = 2000*.9, cex = 4, col = &quot;grey&quot;) legend(x = ((b[1,] + b[2,])/2)[15], y = 2000, legend = c(&quot;Sample 1&quot;, &quot;Sample 2&quot;), fill = c(col.s1, col.s2), bty = &quot;n&quot;) I didn’t have any trouble reading the code, or understanding what needed to happen. The only error I got was in the read.csv function (lines 70 &amp; 74). To fix this. I redirected the function with the ‘here’ command. That way, it was able to find the files in the raw_data folder. library(rbbt) bbt_update_bib(&quot;Workflows_Portfolio_1.2.rmd&quot;) To keep my data manageable I use the Guerilla Analytics framework. Using this method, every project/part of my lessons are in different folders. There is also a README included to give extra information about the way it’s set up. For this assignment, we had to make our DAURII workspace tidy using this framework. You can see that is done here below: References "],["Workflows_Portfolio_2.html", "", "dir_tree(&quot;C:/Users/Youri/OneDrive/Bureaublad/daur2&quot;) knitr::include_graphics(here(&quot;images/directory_tree.png&quot;)) Figure 4: Screenshot of my directory tree "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
